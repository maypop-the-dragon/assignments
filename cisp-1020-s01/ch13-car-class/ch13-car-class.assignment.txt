Complete #2 or #3, Remember to name files descriptively, complete the Critical
Thinking first before coding, upload the Critical Thinking, the .cpp files, and
a picture of the outputs.

Employee Class
1. Write a class named Employee that has the following member variables:
  1. name: a string that holds the employee’s name
  2. idNumber: a n int variable that holds the employee’s ID number
  3. department: a string that holds the name of the department
     where the employee works
  4. position—a string that holds the employee’s job title 
  - The class should have the following constructors:
    1. A constructor that accepts the following values as arguments and assigns
       them to the appropriate member variables: employee’s name, employee’s ID
       number, department, and position.
    2. A constructor that accepts the following values as arguments and assigns
       them to the appropriate member variables: employee’s name and ID number.
       The department and position fields should be assigned an empty string
       ("").
    3. A default constructor that assigns empty strings ("") to the name,
    department, and position member variables, and 0 to the idNumber member
    variable.
  - Write appropriate mutator functions that store values in these member
    variables and accessor functions that return the values in these member
    variables. Once you have written the class, write a separate program that
    creates three Employee objects to hold the following data:
  - The program should store this data in the three objects and then display the
  data for each employee on the screen.

3.Car Class
  - Write a class named Car that has the following member variables:
    1. yearModel: an int that holds the car’s year model
    2. make: a string that holds the make of the car
    3. speed: an int that holds the car’s current speed
  - In addition, the class should have the following constructor and other
    member functions:
    1. Constructor: The constructor should accept the car’s year model and make
       as arguments. These values should be assigned to the object’s yearModel
       and make member variables. The constructor should also assign 0 to the
       speed member variables.
    2. Accessor: appropriate accessor functions to get the values stored in an
       object’s yearModel, make, and speed member variables
    3. accelerate: The accelerate function should add 5 to the speed member
       variable each time it is called.
    4. brake: The brake function should subtract 5 from the speed member
       variable each time it is called.
  - Demonstrate the class in a program that creates a Car object, then calls the
    accelerate function five times. After each call to the accelerate function,
    get the current speed of the car and display it. Then, call the brake
    function five times. After each call to the brake function, get the current
    speed of the car and display it.
